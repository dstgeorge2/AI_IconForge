Several top-tier design systems and open-source projects have already developed comprehensive icon libraries, design constraints, and semantic cheat sheets. Here‚Äôs a breakdown of who‚Äôs done it well ‚Äî along with reference libraries, cheat sheets, and icon-related terminology you can borrow, learn from, or connect to your logic engine.

‚∏ª

üß† WHO HAS ALREADY DONE THE LIBRARY THINKING (Best Practice Libraries)

System	What They Offer	How You Can Use It
Material Symbols (Google)	2,500+ icons with variable axes: weight, fill, grade, optical size. Clear semantic categories (e.g., action, places, editor, etc.)	Reference icon styles, use their naming taxonomy, and mirror their grid + keyline structure
Carbon Icons (IBM)	Designed for enterprise UIs; pixel-snapped, consistent weights. Terms like ‚Äúpictograms‚Äù vs ‚Äúicons‚Äù defined.	Leverage strict alignment rules, stroke behavior, and UX pairing rules
Phosphor Icons	Friendly, open-source icon library with styles: bold, duotone, fill, light, regular, thin	Good for exploring style variations and metadata tags
Heroicons (Tailwind)	Clean SVGs in outline and solid, focused on clarity and simplicity	Their ‚Äúdual mode‚Äù logic (outline/solid toggle) is good model for adaptive icon systems
Lucide (fork of Feather Icons)	Lightweight and community-driven with clean geometry	Great for understanding minimalist logic and grid snapping
Octicons (GitHub)	Optimized for dev environments and toolbars. Semantic naming and roles (e.g., issue-closed, pull-request)	Good metadata and role-based use context
Eva Icons	Atomic actions and concepts for mobile apps, with 480+ icons	Good mapping to mobile roles and common UI metaphors
FontAwesome	Massive set with commercial support; tags, aliases, styles	Excellent cheat sheet for legacy or wide-coverage metaphors


‚∏ª

üß© CHEAT SHEET: ICON SEMANTIC TYPES & METAPHOR CLASSES

üîß Functional Role Types
	‚Ä¢	action (e.g., delete, add, download)
	‚Ä¢	object (e.g., folder, document, printer)
	‚Ä¢	status (e.g., error, warning, success)
	‚Ä¢	navigation (e.g., home, back, forward)
	‚Ä¢	tool (e.g., ruler, edit, brush)
	‚Ä¢	data (e.g., chart, table, calendar)
	‚Ä¢	communication (e.g., chat, mail, comment)
	‚Ä¢	user (e.g., person, team, admin)

üß† Semantic Categories
	‚Ä¢	system (power, settings, lock)
	‚Ä¢	editor (text, font, align, bold)
	‚Ä¢	file (upload, download, rename)
	‚Ä¢	device (mobile, desktop, monitor)
	‚Ä¢	media (play, pause, mic, camera)
	‚Ä¢	interface (tooltip, modal, spinner)
	‚Ä¢	layout (grid, list, columns)

üèóÔ∏è Geometry/Style Constraints
	‚Ä¢	stroke_weight: thin / regular / bold (e.g., Material‚Äôs 100‚Äì700)
	‚Ä¢	fill_style: outline / solid / duo-tone / inverse
	‚Ä¢	corner_style: rounded / sharp / square
	‚Ä¢	grid_size: 24dp base grid; 20dp live area
	‚Ä¢	perspective: orthographic / frontal only (never 3D unless specified)
	‚Ä¢	interaction: decorative vs. interactive
	‚Ä¢	contrast_ratio: min 4.5:1

‚∏ª

üìÅ Resources to Integrate or Train With

Resource	Use Case
Material Symbols Metadata	Includes categories, tags, aliases, and JSON metadata
Carbon Icons	Canonical icon grid, sizing, and design reasoning
Iconify	Meta-library of 100+ icon sets with consistent naming and SVG formats
Lucide.dev	Clean, developer-friendly icon set with API
Heroicons.dev	Semantic + style duality ‚Äî great example of accessible SVGs
Phosphor Icons	Good metadata structure and variable weight support
Icon Kitchen	Icon font and SVG generator (helpful for testing variants)


‚∏ª

üß† Next Step for You

To improve your logic engine:
	1.	Scrape and normalize metadata from Material Symbols, Carbon, and Lucide
	2.	Build a semantic reference model that maps metaphor ‚Üí geometry ‚Üí constraints
	3.	Train a classifier using labeled icon image sets + filenames (with metadata)
	4.	Add alias + synonym handling: e.g., trash, delete, and remove should all map to same concept
	5.	Integrate a ‚Äúwhat is this?‚Äù validator using your constraints engine
	6.	Use filenames as semantic hints only when they‚Äôre descriptive (use regex/ML to flag junk names)

‚∏ª

Would you like:
	‚Ä¢	A JSON schema for icon validation?
	‚Ä¢	A spreadsheet of categories/metaphors from Carbon + Material?
	‚Ä¢	A trained mapping set of images ‚Üí concept?

Just say the word.